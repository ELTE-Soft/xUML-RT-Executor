--- RCPTT testcase ---
Format-Version: 1.0
Element-Name: Directory handling
Element-Type: testcase
Element-Version: 3.0
External-Reference: 
Id: _JJ3A4B4LEeWDyJhARpwrcA
Runtime-Version: 2.0.0.201509132315
Save-Time: 9/14/15 6:32 AM
Testcase-Type: ecl

------=_.content-0a7243a0-75d3-3d5f-9791-539de0e5b7ac
Content-Type: text/ecl
Entry-Name: .content


mx-new-xuml-project "TestProject"
mx-copy-model-to-test "HelloWorld"


// -------------------------------------------------
// Change generated sources folder

get-view "Project Explorer" | get-tree | select TestProject | get-menu "New/Folder" | click
with [get-window "New Folder"] {
    with [get-editbox -after [get-label "Folder name:"]] {
        set-text "generated-sources"
    }
    get-button Finish | click
}
get-view "Project Explorer" | get-tree | select TestProject | get-menu Properties | click
with [get-window "Properties for TestProject"] {
    get-tree | select "xUML-RT Executor"
    get-group "Folder for generated sources" | get-button Select | click
    with [get-window "Select folder"] {
        get-tree | select "TestProject/generated-sources"
        get-button OK | click
    }
    get-button OK | click
}

// TODO files should always be generated, even this does not always help
mx-clean-projects


global [val expectedFileCount 7]


// Check expected file counts
get-view Navigator | get-tree | select TestProject | get-menu Refresh | click
get-view Navigator | get-tree | get-item "TestProject/generated-sources" | get-property "getItems().length" | equals $expectedFileCount | verify-true


// -------------------------------------------------
// Delete generated sources folder

global [val fileCountBeforeDeletion [get-view Navigator | get-tree | get-item TestProject | get-property childCount -raw]] -override

get-view Navigator | get-tree | select "TestProject/generated-sources" | key-type Del
get-window "Delete Resources" | get-button OK | click

// Check that the deleted folder is not there (we have one directory less)
get-view Navigator | get-tree | get-item TestProject | get-property childCount | equals [minus $fileCountBeforeDeletion 1] | verify-true


// -------------------------------------------------
// Regenerate generated sources folder

get-menu "Project/Clean..." | click
get-window Clean | get-button OK | click

// Check that the folder is present again
get-view Navigator | get-tree | get-item "TestProject/generated-sources" | get-property caption 
    | equals "generated-sources" | verify-true

// Check expected file counts
get-view Navigator | get-tree | select TestProject | get-menu Refresh | click
get-view Navigator | get-tree | get-item "TestProject/generated-sources" | get-property "getItems().length" | equals 7 | verify-true


------=_.content-0a7243a0-75d3-3d5f-9791-539de0e5b7ac--
