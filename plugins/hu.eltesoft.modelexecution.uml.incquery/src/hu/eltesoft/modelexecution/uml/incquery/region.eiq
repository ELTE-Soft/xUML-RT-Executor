package hu.eltesoft.modelexecution.uml.incquery

import "http://www.eclipse.org/uml2/5.0.0/UML"

pattern Region(region : Region) {
	Region(region);
}

pattern ContainerClassOfRegion(region : Region, containerClass : Class) {
	Class.ownedBehavior(containerClass, stateMachine);
	StateMachine.region(stateMachine, region);
}

pattern
Initials(region : Region, initPseudostate : Pseudostate, initTransition : Transition, firstState : State) {
	Pseudostate.container(initPseudostate, region);
	Pseudostate.kind(initPseudostate, ::initial);

	Transition.source(initTransition, initPseudostate);
	Transition.target(initTransition, firstState);
}

pattern State(region : Region, state : State) {
	State.container(state, region);
}

pattern FinalState(region : Region, state : State) {
	find State(region, state);
	FinalState(state);
}

pattern Entry(region : Region, state : State, entry : Behavior) {
	State.container(state, region);
	State.entry(state, entry);
}

pattern Exit(region : Region, state : State, exit : Behavior) {
	State.container(state, region);
	State.exit(state, exit);
}

pattern
Transition(region : Region, source : State, transition : Transition, event : Event, signal : Signal, target : State) {
	find TransitionBase(region, source, transition, event, target);
	SignalEvent.signal(event, signal);
}

private pattern
TransitionBase(region : Region, source : State, transition : Transition, event : Event, target : State) {
	Transition.container(transition, region);
	Transition.source(transition, source);
	Transition.target(transition, target);
	Transition.trigger(transition, trigger);
	Trigger.event(trigger, event);
}

pattern
TransitionEffect(region : Region, state : State, transition : Transition, effect : Behavior) {
	Transition.source(transition, state);
	Transition.container(transition, region);
	Transition.effect(transition, effect);
}
